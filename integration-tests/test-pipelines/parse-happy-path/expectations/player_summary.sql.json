{
  "asset": {
    "id": "8361c0131fda306b28fd4f3c8f2af121cca5e57baf77a771b4cb218abda4ca5b",
    "uri": "",
    "name": "chess_playground.player_summary",
    "type": "duckdb.sql",
    "description": "",
    "connection": "",
    "tags": [],
    "materialization": {
      "type": "table",
      "strategy": "",
      "partition_by": "",
      "cluster_by": null,
      "incremental_key": "",
      "time_granularity": ""
    },
    "upstreams": [
      {
        "type": "asset",
        "value": "chess_playground.games",
        "columns": [],
        "mode": "full"
      },
      {
        "type": "asset",
        "value": "chess_playground.profiles",
        "columns": [],
        "mode": "full"
      }
    ],
    "image": "",
    "instance": "",
    "owner": "",
    "executable_file": {
      "name": "player_summary.sql",
      "path": "test-pipelines/parse-happy-path/assets/player_summary.sql",
      "content": "WITH game_results AS (\n    SELECT\n        CASE\n            WHEN g.white->>'result' = 'win' THEN g.white->>'@id'\n            WHEN g.black->>'result' = 'win' THEN g.black->>'@id'\n            ELSE NULL\n            END AS winner_aid,\n        g.white->>'@id' AS white_aid,\n    g.black->>'@id' AS black_aid\nFROM chess_playground.games g\n)\n\nSELECT\n    p.username,\n    p.aid,\n    COUNT(*) AS total_games,\n    COUNT(CASE WHEN g.white_aid = p.aid AND g.winner_aid = p.aid THEN 1 END) AS white_wins,\n    COUNT(CASE WHEN g.black_aid = p.aid AND g.winner_aid = p.aid THEN 1 END) AS black_wins,\n    COUNT(CASE WHEN g.white_aid = p.aid THEN 1 END) AS white_games,\n    COUNT(CASE WHEN g.black_aid = p.aid THEN 1 END) AS black_games,\n    ROUND(COUNT(CASE WHEN g.white_aid = p.aid AND g.winner_aid = p.aid THEN 1 END) * 100.0 / NULLIF(COUNT(CASE WHEN g.white_aid = p.aid THEN 1 END), 0), 2) AS white_win_rate,\n    ROUND(COUNT(CASE WHEN g.black_aid = p.aid AND g.winner_aid = p.aid THEN 1 END) * 100.0 / NULLIF(COUNT(CASE WHEN g.black_aid = p.aid THEN 1 END), 0), 2) AS black_win_rate\nFROM chess_playground.profiles p\nLEFT JOIN game_results g\n       ON p.aid IN (g.white_aid, g.black_aid)\nGROUP BY p.username, p.aid\nORDER BY total_games DESC"
    },
    "definition_file": {
      "name": "player_summary.sql",
      "path": "test-pipelines/parse-happy-path/assets/player_summary.sql",
      "type": "comment"
    },
    "parameters": {},
    "secrets": [],
    "extends": null,
    "columns": [
      {
        "entity_attribute": null,
        "name": "total_games",
        "type": "integer",
        "description": "the games",
        "primary_key": false,
        "update_on_merge": false,
        "checks": [
          {
            "id": "df9255080865c27b164a7de36a0a26bcc00345dddd66849d96aa96a2c68266ea",
            "name": "positive",
            "value": null,
            "blocking": true,
            "description": ""
          }
        ],
        "upstreams": []
      }
    ],
    "custom_checks": [],
    "metadata": {},
    "snowflake": null,
    "athena": null,
    "interval_modifiers": null
  },
  "pipeline": {
    "name": "integration_test",
    "schedule": ""
  },
  "repo": {
    "path": "/Users/bruin/GolandProjects/bruin/integration-tests"
  }
}
