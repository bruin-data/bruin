name: CI Checks

on:
  push:
    branches: [ main ]
    paths-ignore:
      - 'docs/**'
      - 'examples/**'
      - 'resources/**'
      - 'templates/**'
      - 'install.sh'
      - 'README.md'
      - 'Makefile'
      - 'package.json'
      - 'package-lock.json'
  pull_request:
    branches: [ main ]
    paths-ignore:
      - 'docs/**'
      - 'examples/**'
      - 'resources/**'
      - 'templates/**'
      - 'install.sh'
      - 'README.md'
      - 'Makefile'
      - 'package.json'
      - 'package-lock.json'

# concurrency:
#   group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
#   cancel-in-progress: true

jobs:
  build:
    strategy:
      matrix:
        platform: [ ubuntu-latest, windows-latest ]
    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'
      - run: make test
      - run: make duckdb-test
        shell: bash


  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'
      - run: make tools
      - name: Run golangci-lint
        run: golangci-lint run --timeout 10m60s ./...

  goreleaser-windows:
    runs-on: windows-latest
    defaults:
      run:
        shell: msys2 {0}
    steps:
      - uses: actions/checkout@v3
      - uses: msys2/setup-msys2@v2
        with:
          msystem: UCRT64
          update: true
          install: git mingw-w64-ucrt-x86_64-gcc
      - uses: actions/setup-go@v4
        with:
          go-version-file: 'go.mod'
      - name: Install GoReleaser
        uses: goreleaser/goreleaser-action@v6
        with:
          version: v2.3.2
          args: build --clean --snapshot --single-target --id bruin-windows-amd64
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VERSION: ${{ github.ref_name }}
          COMMIT_SHA: ${{ github.sha }}

  goreleaser-unix:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v4
        with:
          go-version-file: 'go.mod'

      - name: Run GoReleaser
        run: |
          docker run -e VERSION=0.0.0 -e COMMIT_SHA=${{ github.sha }} -v $(pwd):/src -w /src goreleaser/goreleaser-cross:v1.22 build --snapshot --clean --id bruin-darwin --id bruin-linux-amd64 --id bruin-linux-arm64  --single-target
